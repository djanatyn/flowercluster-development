#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    balance                 roundrobin
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-pretend-keepalive
    option forwardfor       
    option                  redispatch
    retries                 3
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
    bind *:80
    default_backend apache

    acl host_httpd hdr(host) -i zubkoland.org
    acl host_shellinabox hdr(host) -i shell.zubkoland.org
    acl host_redmine hdr(host) -i tracker.zubkoland.org
    acl host_whalespeak hdr(host) -i whalespeak.zubkoland.org

    use_backend shellinabox if host_shellinabox
    use_backend redmine if host_redmine
    use_backend apache if host_httpd
    use_backend whalespeak if host_whalespeak

backend whalespeak
    http-request set-header X-Forwarded-Port %[dst_port]

    option httpchk GET /

    cookie whalespeak prefix
    server whaleseak 127.0.0.1:1234 check

backend shellinabox
    http-request set-header X-Forwarded-Port %[dst_port]

    option httpchk GET /

    cookie shellinabox prefix
    server shellinaboxd 127.0.0.1:4020 check

backend redmine
    http-request set-header X-Forwarded-Port %[dst_port]

    option httpchk GET / 

    cookie redmine prefix
    server redmine localhost:8090 check

backend apache
    http-request set-header X-Forwarded-Port %[dst_port]
    server httpd localhost:8080

